name: Build, Push, and Deploy Surveycat API Images

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_VERSION: "1.44"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ls -l ~/.ssh/deploy_key
          cat ~/.ssh/deploy_key

          ssh-keyscan -p 54222 snf-893977.vm.okeanos.grnet.gr >> ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts

      - name: Set Docker Host
        env:
          DOCKER_HOST: tcp://snf-893977.vm.okeanos.grnet.gr:2375
        run: echo "Docker Host set successfully."

      - name: Stop running & remove volumes
        run: |
          ssh -p 54222 -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key cntzoufras_deploy@snf-893977.vm.okeanos.grnet.gr 'cd /var/www/surveycat_api && docker-compose -f docker-compose.prod.yml down --volumes'

      #      - name: Pull latest Docker imagess
      #        run: |
      #          ssh -p 54222 -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key cntzoufras_deploy@snf-893977.vm.okeanos.grnet.gr 'cd /var/www/surveycat_api && docker-compose -f docker-compose.prod.yml pull'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, zip, pcntl
          coverage: none

      - name: Create .env file
        run: |
          echo "APP_ENV=production" > .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "APP_URL=https://snf-893977.vm.okeanos.grnet.gr/api" >> .env
          echo "SANCTUM_STATEFUL_DOMAINS=snf-893977.vm.okeanos.grnet.gr" >> .env
          echo "SESSION_DOMAIN=snf-893977.vm.okeanos.grnet.gr" >> .env
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      #      - name: Pull latest Docker images
      #        run: |
      #          docker pull cntzoufras/surveycat-api-apache:$IMAGE_VERSION

      - name: Build and push Docker images to Dockerhub
        run: |
          echo "${{ secrets.SURVEYCAT_API_ACCESS_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          
          # Build, tag push image to Dockerhub
          docker-compose -f docker-compose.prod.yml build --build-arg IMAGE_VERSION=$IMAGE_VERSION
          
          # Add version tag in built image
          docker tag cntzoufras/surveycat-api-apache:$IMAGE_VERSION cntzoufras/surveycat-api-apache:$IMAGE_VERSION

          # Push to Dockerhub
          docker-compose -f docker-compose.prod.yml push

      - name: Deploy to Production Server
        run: |
          scp -P 54222 -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key .env cntzoufras_deploy@snf-893977.vm.okeanos.grnet.gr:/var/www/surveycat_api
          ssh -p 54222 -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key cntzoufras_deploy@snf-893977.vm.okeanos.grnet.gr 'cd /var/www/surveycat_api && docker-compose -f docker-compose.prod.yml up -d'

      - name: Run database migrations and seed
        run: |
          docker-compose -f docker-compose.prod.yml exec --tty surveycat-api php artisan migrate:fresh --seed

      - name: Set directories permissions
        run: |
          docker-compose -f docker-compose.prod.yml exec -tty surveycat-api chmod -R 777 storage bootstrap/cache
