name: Build and Deploy Docker Images

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, zip, pcntl
          coverage: none

      - name: Copy .env from example
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Create .env file
        run: |
          echo "APP_ENV=production" > .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "APP_URL=https://snf-893977.vm.okeanos.grnet.gr/api" >> .env
          echo "SANCTUM_STATEFUL_DOMAINS=snf-893977.vm.okeanos.grnet.gr" >> .env
          echo "SESSION_DOMAIN=snf-893977.vm.okeanos.grnet.gr" >> .env
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=api-pgsql-1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          ls -al
          pwd

      - name: Build and run production containers
        run: |
          docker-compose -f docker-compose.prod.yml up -d --build
        env:
          DOCKER_BUILDKIT: 1

      - name: Check container status
        run: |
          docker ps -a
        continue-on-error: true

      - name: Install Composer dependencies
        run: |
          docker-compose -f docker-compose.prod.yml exec -T surveycat-api composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction

      - name: Run database migrations and seed
        run: |
          docker-compose -f docker-compose.prod.yml exec --tty surveycat-api php artisan migrate:fresh --seed

      - name: Set directory permissions
        run: |
          docker-compose -f docker-compose.prod.yml exec -T surveycat-api chmod -R 777 storage bootstrap/cache

      - name: Check container logs
        run: |
          docker-compose -f docker-compose.prod.yml logs
